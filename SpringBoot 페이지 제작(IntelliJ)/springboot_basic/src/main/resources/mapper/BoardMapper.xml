<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kopo.aisw.springboot_basic.mapper.BoardMapper">

    <!-- 파일 기능 추가 -->
    <insert id="save" parameterType="Board">
        INSERT INTO tb_board (title, content, user_id)
        VALUES (#{title}, #{content}, #{userId})
        <selectKey keyProperty="boardId" resultType="Long" order="AFTER">
            SELECT board_seq.currval FROM dual
        </selectKey>
    </insert>

    <select id="findById" parameterType="Long" resultType="Board">
        SELECT * FROM tb_board WHERE board_id = #{boardId}
    </select>

    <select id="findAll" resultType="Board">
        SELECT * FROM tb_board ORDER BY board_id DESC
    </select>

    <update id="update" parameterType="Board">
        UPDATE tb_board
        SET title = #{title}, content = #{content}
        WHERE board_id = #{boardId}
    </update>

    <delete id="delete" parameterType="Long">
        DELETE FROM tb_board WHERE board_id = #{boardId}
    </delete>

    <update id="updateViewCount" parameterType="Long">
        UPDATE tb_board
        SET view_count = view_count + 1
        WHERE board_id = #{boardId}
    </update>

    <!-- 페이지네이션 처리 : 검색 쿼리 적용 부분 수정-->
    <select id="getListWithPaging" resultType="Board" parameterType="Criteria">
        SELECT *
        FROM (
        SELECT ROWNUM NUM, BOARD.*
        FROM(SELECT * FROM tb_board
        <if test="type != null and keyword != null">
            <include refid="criteria"/>
        </if>
        ORDER BY board_id DESC) BOARD
        )
        WHERE NUM BETWEEN #{offset} AND #{offset} + #{amount}
    </select>

    <select id="getTotalCount" resultType="int">
        SELECT COUNT(*) FROM tb_board
        <if test="type != null and keyword != null">
            <include refid="criteria"/>
        </if>
    </select>

    <!-- 검색 쿼리 추가 -->
    <sql id="criteria">
        <trim prefix="WHERE (" suffix=")" prefixOverrides="OR">
            <foreach collection="typeArr" item="type">
                <trim prefix="OR">
                    <choose>
                        <when test="type == 'T'.toString()">
                            title LIKE CONCAT('%'|| #{keyword}, '%')
                        </when>
                        <when test="type == 'C'.toString()">
                            content LIKE CONCAT('%'|| #{keyword}, '%')
                        </when>
                        <when test="type == 'W'.toString()">
                            user_id LIKE CONCAT('%'|| #{keyword}, '%')
                        </when>
                    </choose>
                </trim>
            </foreach>
        </trim>
    </sql>

    <!-- 파일 저장 -->
    <insert id="saveFile" parameterType="FileInfo">
        INSERT INTO file_info (
            board_id, original_file_name, saved_file_name, file_path, file_size, file_type
        ) VALUES (
                  #{boardId}, #{originalFileName}, #{savedFileName}, #{filePath}, #{fileSize}, #{fileType}
                 )
    </insert>

    <!-- 파일 조회 -->
    <select id="findFileById" parameterType="Long" resultType="FileInfo">
        SELECT * FROM file_info WHERE file_id = #{fileId}
    </select>

    <!-- 게시글의 파일 목록 조회 -->
    <select id="findFilesByBoardId" parameterType="Long" resultType="FileInfo">
        SELECT * FROM file_info WHERE board_id = #{boardId}
    </select>

    <!-- 파일 삭제 -->
    <delete id="deleteFile" parameterType="Long">
        DELETE FROM file_info WHERE file_id = #{fileId}
    </delete>

    <!-- 게시글의 모든 파일 삭제 -->
    <delete id="deleteFilesByBoardId" parameterType="Long">
        DELETE FROM file_info WHERE board_id = #{boardId}
    </delete>

</mapper>
